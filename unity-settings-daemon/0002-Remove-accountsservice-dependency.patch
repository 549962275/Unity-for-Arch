From 26aafa37eabc92ab430e4a0bd3ce1536f1962ef7 Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Sun, 8 Jun 2014 16:23:30 -0400
Subject: [PATCH 2/5] Remove accountsservice dependency

---
 configure.ac                            |  2 +-
 plugins/keyboard/gsd-keyboard-manager.c | 72 ---------------------------------
 2 files changed, 1 insertion(+), 73 deletions(-)

diff --git a/configure.ac b/configure.ac
index eeb05c8..b891cb1 100644
--- a/configure.ac
+++ b/configure.ac
@@ -195,7 +195,7 @@ else
 fi
 AM_CONDITIONAL(HAVE_IBUS, test "x$enable_ibus" == "xyes")
 
-PKG_CHECK_MODULES(KEYBOARD, accountsservice xkbfile $IBUS_MODULE gnome-desktop-compat-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION)
+PKG_CHECK_MODULES(KEYBOARD, xkbfile $IBUS_MODULE gnome-desktop-compat-3.0 >= $GNOME_DESKTOP_REQUIRED_VERSION)
 
 dnl ---------------------------------------------------------------------------
 dnl - Housekeeping plugin stuff
diff --git a/plugins/keyboard/gsd-keyboard-manager.c b/plugins/keyboard/gsd-keyboard-manager.c
index c9676ec..6324950 100644
--- a/plugins/keyboard/gsd-keyboard-manager.c
+++ b/plugins/keyboard/gsd-keyboard-manager.c
@@ -50,8 +50,6 @@
 #include <ibus.h>
 #endif
 
-#include <act/act.h>
-
 #include "gnome-settings-session.h"
 #include "gnome-settings-profile.h"
 #include "gsd-keyboard-manager.h"
@@ -1019,67 +1017,6 @@ apply_xkb_settings (GsdKeyboardManager *manager,
         XkbLockModifiers (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), XkbUseCoreKbd, LockMask, 0);
 }
 
-static void
-user_notify_is_loaded_cb (GObject    *object,
-                          GParamSpec *pspec,
-                          gpointer    user_data)
-{
-        ActUser *user = ACT_USER (object);
-        GSettings *settings = user_data;
-
-        if (act_user_is_loaded (user)) {
-                GVariant *sources;
-                GVariantIter iter;
-                const gchar *type;
-                const gchar *name;
-                GVariantBuilder builder;
-
-                g_signal_handlers_disconnect_by_data (user, user_data);
-
-                sources = g_settings_get_value (settings, KEY_INPUT_SOURCES);
-
-                g_variant_builder_init (&builder, G_VARIANT_TYPE ("aa{ss}"));
-
-                g_variant_iter_init (&iter, sources);
-                while (g_variant_iter_next (&iter, "(&s&s)", &type, &name)) {
-                        g_variant_builder_open (&builder, G_VARIANT_TYPE ("a{ss}"));
-                        g_variant_builder_add (&builder, "{ss}", type, name);
-                        g_variant_builder_close (&builder);
-                }
-
-                g_variant_unref (sources);
-
-                sources = g_variant_ref_sink (g_variant_builder_end (&builder));
-                act_user_set_input_sources (user, sources);
-                g_variant_unref (sources);
-        }
-}
-
-static void
-manager_notify_is_loaded_cb (GObject    *object,
-                             GParamSpec *pspec,
-                             gpointer    user_data)
-{
-        ActUserManager *manager = ACT_USER_MANAGER (object);
-
-        gboolean loaded;
-        g_object_get (manager, "is-loaded", &loaded, NULL);
-
-        if (loaded) {
-                ActUser *user;
-
-                g_signal_handlers_disconnect_by_data (manager, user_data);
-
-                user = act_user_manager_get_user (manager, g_get_user_name ());
-
-                if (act_user_is_loaded (user))
-                        user_notify_is_loaded_cb (G_OBJECT (user), NULL, user_data);
-                else
-                        g_signal_connect (user, "notify::is-loaded",
-                                          user_notify_is_loaded_cb, user_data);
-        }
-}
-
 static gboolean
 apply_input_source (GsdKeyboardManager *manager,
                     guint               current)
@@ -1179,8 +1116,6 @@ apply_input_sources_settings (GSettings          *settings,
         GVariant *sources;
         guint n_sources;
         guint current;
-        ActUserManager *user_manager;
-        gboolean user_manager_loaded;
 
         sources = g_settings_get_value (priv->input_sources_settings, KEY_INPUT_SOURCES);
         n_sources = g_variant_n_children (sources);
@@ -1198,13 +1133,6 @@ apply_input_sources_settings (GSettings          *settings,
                 goto exit;
         }
 
-        user_manager = act_user_manager_get_default ();
-        g_object_get (user_manager, "is-loaded", &user_manager_loaded, NULL);
-        if (user_manager_loaded)
-                manager_notify_is_loaded_cb (G_OBJECT (user_manager), NULL, priv->input_sources_settings);
-        else
-                g_signal_connect (user_manager, "notify::is-loaded", G_CALLBACK (manager_notify_is_loaded_cb), priv->input_sources_settings);
-
         apply_input_source (manager, current);
 
 exit:
-- 
2.0.0

