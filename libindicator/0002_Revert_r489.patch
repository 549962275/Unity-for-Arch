=== modified file 'configure.ac'
--- configure.ac	2013-04-22 15:50:51 +0000
+++ configure.ac	2013-01-18 21:18:27 +0000
@@ -44,7 +44,7 @@
 
 GTK_REQUIRED_VERSION=2.18
 GTK3_REQUIRED_VERSION=3.6
-GIO_UNIX_REQUIRED_VERSION=2.37
+GIO_UNIX_REQUIRED_VERSION=2.22
 
 AC_ARG_WITH([gtk],
   [AS_HELP_STRING([--with-gtk],

#=== modified file 'debian/control'
#--- debian/control	2013-04-22 15:50:51 +0000
#+++ debian/control	2012-11-22 17:19:57 +0000
#@@ -12,7 +12,7 @@
#                gtk-doc-tools,
#                dbus-test-runner,
#                xvfb,
#-               libglib2.0-dev (>= 2.37),
#+               libglib2.0-dev (>= 2.22),
#                libgtk2.0-dev (>= 2.18),
#                libgtk-3-dev (>= 2.91.3),
# Standards-Version: 3.9.2

=== modified file 'libindicator/indicator-image-helper.c'
--- libindicator/indicator-image-helper.c	2013-05-19 16:47:01 +0000
+++ libindicator/indicator-image-helper.c	2013-01-25 10:11:59 +0000
@@ -63,64 +63,42 @@
 		icon_filename = gtk_icon_info_get_filename(icon_info);
 	}
 
-	if (icon_filename == NULL && !G_IS_BYTES_ICON (icon_names)) {
-		/* show a broken image if we don't have a filename or image data */
+	/* show a broken image if we don't have a filename */
+	if (icon_filename == NULL) {
 		gtk_image_set_from_stock (image, GTK_STOCK_MISSING_IMAGE, GTK_ICON_SIZE_LARGE_TOOLBAR);
 		return;
 	}
 
 	/* Build a pixbuf */
-	GdkPixbuf * pixbuf = NULL;
-
-	if (icon_filename == NULL) {
-		GError * error = NULL;
-		GInputStream * stream = g_loadable_icon_load (G_LOADABLE_ICON (icon_names), icon_size, NULL, NULL, &error);
-
-		if (stream != NULL) {
-			pixbuf = gdk_pixbuf_new_from_stream (stream, NULL, &error);
-			g_input_stream_close (stream, NULL, NULL);
-			g_object_unref (stream);
-
-			if (pixbuf == NULL) {
-				g_warning ("Unable to load icon from data: %s", error->message);
-				g_error_free (error);
-			}
-		} else {
-			g_warning ("Unable to load icon from data: %s", error->message);
-			g_error_free (error);
-		}
-	} else {
-		GError * error = NULL;
-
-		pixbuf = gdk_pixbuf_new_from_file (icon_filename, &error);
-
-		if (pixbuf == NULL) {
-			g_warning ("Unable to load icon from file '%s': %s", icon_filename, error->message);
-			g_error_free (error);
-		}
-	}
-
-	if (pixbuf != NULL) {
-		/* Scale icon if all we get is something too big. */
-		if (gdk_pixbuf_get_height(pixbuf) > icon_size) {
-			gfloat scale = (gfloat)icon_size / (gfloat)gdk_pixbuf_get_height(pixbuf);
-			gint width = round(gdk_pixbuf_get_width(pixbuf) * scale);
-
-			GdkPixbuf * scaled = gdk_pixbuf_scale_simple(pixbuf, width, icon_size, GDK_INTERP_BILINEAR);
-			g_object_unref(G_OBJECT(pixbuf));
-			pixbuf = scaled;
-		}
-
-		/* Put the pixbuf on the image */
-		gtk_image_set_from_pixbuf(image, pixbuf);
+	GError * error = NULL;
+	GdkPixbuf * pixbuf = gdk_pixbuf_new_from_file(icon_filename, &error);
+
+	if (icon_info != NULL) {
+		gtk_icon_info_free(icon_info);
+	}
+
+	if (pixbuf == NULL) {
+		g_warning("Unable to load icon from file '%s' because: %s", icon_filename, error == NULL ? "I don't know" : error->message);
+		g_clear_error (&error);
+		gtk_image_clear(image);
+		return;
+	}
+
+	/* Scale icon if all we get is something too big. */
+	if (gdk_pixbuf_get_height(pixbuf) > icon_size) {
+		gfloat scale = (gfloat)icon_size / (gfloat)gdk_pixbuf_get_height(pixbuf);
+		gint width = round(gdk_pixbuf_get_width(pixbuf) * scale);
+
+		GdkPixbuf * scaled = gdk_pixbuf_scale_simple(pixbuf, width, icon_size, GDK_INTERP_BILINEAR);
 		g_object_unref(G_OBJECT(pixbuf));
-	} else {
-		gtk_image_set_from_stock (image, GTK_STOCK_MISSING_IMAGE, GTK_ICON_SIZE_LARGE_TOOLBAR);
-	}
-
-	if (icon_info != NULL) {
-		gtk_icon_info_free (icon_info);
-	}
+		pixbuf = scaled;
+	}
+
+	/* Put the pixbuf on the image */
+	gtk_image_set_from_pixbuf(image, pixbuf);
+	g_object_unref(G_OBJECT(pixbuf));
+
+	return;
 }
 
 /* Handles the theme changed signal to refresh the icon to make

=== modified file 'libindicator/indicator-ng.c'
--- libindicator/indicator-ng.c	2013-04-26 13:39:14 +0000
+++ libindicator/indicator-ng.c	2013-03-21 18:06:22 +0000
@@ -179,12 +179,13 @@
 }
 
 static void
-indicator_ng_set_icon_from_variant (IndicatorNg *self,
-                                    GVariant    *variant)
+indicator_ng_set_icon_from_string (IndicatorNg *self,
+                                   const gchar *str)
 {
   GIcon *icon;
+  GError *error = NULL;
 
-  if (variant == NULL)
+  if (str == NULL || *str == '\0')
     {
       if (self->entry.image)
         {
@@ -199,7 +200,7 @@
 
   gtk_widget_show (GTK_WIDGET (self->entry.image));
 
-  icon = g_icon_deserialize (variant);
+  icon = g_icon_new_for_string (str, &error);
   if (icon)
     {
       indicator_image_helper_update_from_gicon (self->entry.image, icon);
@@ -207,10 +208,9 @@
     }
   else
     {
-      gchar *text = g_variant_print (variant, TRUE);
-      g_warning ("invalid icon variant '%s'", text);
+      g_warning ("invalid icon string '%s': %s", str, error->message);
       gtk_image_set_from_stock (self->entry.image, GTK_STOCK_MISSING_IMAGE, GTK_ICON_SIZE_LARGE_TOOLBAR);
-      g_free (text);
+      g_error_free (error);
     }
 }
 
@@ -237,7 +237,7 @@
 {
   GVariant *state;
   const gchar *label = NULL;
-  GVariant *icon = NULL;
+  const gchar *iconstr = NULL;
   const gchar *accessible_desc = NULL;
   gboolean visible = TRUE;
 
@@ -254,20 +254,12 @@
   state = g_action_group_get_action_state (self->actions, self->header_action);
   if (state && g_variant_is_of_type (state, G_VARIANT_TYPE ("(sssb)")))
     {
-      gchar *iconstr = NULL;
-
       g_variant_get (state, "(&s&s&sb)", &label, &iconstr, &accessible_desc, &visible);
-
-      if (iconstr)
-        {
-          icon = g_variant_ref_sink (g_variant_new_string (iconstr));
-          g_free (iconstr);
-        }
     }
   else if (state && g_variant_is_of_type (state, G_VARIANT_TYPE ("a{sv}")))
     {
       g_variant_lookup (state, "label", "&s", &label);
-      g_variant_lookup (state, "icon", "*", &icon);
+      g_variant_lookup (state, "icon", "&s", &iconstr);
       g_variant_lookup (state, "accessible-desc", "&s", &accessible_desc);
       g_variant_lookup (state, "visible", "b", &visible);
     }
@@ -276,14 +268,12 @@
 
   if (label)
     indicator_ng_set_label (self, label);
-  if (icon)
-    indicator_ng_set_icon_from_variant (self, icon);
+  if (iconstr)
+      indicator_ng_set_icon_from_string (self, iconstr);
   if (accessible_desc)
     indicator_ng_set_accessible_desc (self, accessible_desc);
   indicator_object_set_visible (INDICATOR_OBJECT (self), visible);
 
-  if (icon)
-    g_variant_unref (icon);
   if (state)
     g_variant_unref (state);
 }

