# Maintainer: Xiao-Long Chen <chenxiaolong@cxl.epac.to>

# Some comments are taken from the Ubuntu packaging files

# Since all parts of Compiz are now released together upstream, I will not split
# this package anymore. There are far too many packages to split and Arch/pacman
# makes it extremely hard to do.
pkgname=compiz-ubuntu

_ubuntu_rel="0ubuntu3"
_actual_ver=0.9.8
_bzr_rev=3319

# Another AUR fix
pkgver=${_actual_ver}.bzr${_bzr_rev}.${_ubuntu_rel}

pkgrel=100
pkgdesc="OpenGL window and compositing manager"
url="http://www.compiz.org/"
arch=('i686' 'x86_64')
license=('GPL')
depends=('boost-libs' 'dbus' 'fuse' 'gconf-ubuntu' 'glibmm' 'gnome-control-center' 'librsvg' 'libxcomposite' 'libxdamage' 'libxinerama' 'libxrandr' 'libxslt' 'mesa' 'startup-notification' 'protobuf' 'pyrex' 'gsettings-desktop-schemas')
makedepends=('boost' 'cmake' 'intltool' 'libwnck')
provides=(compiz-core{,-ubuntu}="${pkgver}"
          compiz-gnome{,-ubuntu}="${pkgver}"
          compiz-kde{,-ubuntu}="${pkgver}"
          libcompizconfig{,-ubuntu}="${pkgver}"
          compizconfig-backend-gconf{,-ubuntu}="${pkgver}"
          compizconfig-backend-kconfig4{,-ubuntu}="${pkgver}"
          compizconfig-python{,-ubuntu}="${pkgver}"
          ccsm{,-ubuntu}="${pkgver}"
          compiz-plugins-main{,-ubuntu}="${pkgver}"
          compiz-plugins-extra{,-ubuntu}="${pkgver}")
conflicts=(compiz-core{,-ubuntu}
           compiz-gnome{,-ubuntu}
           compiz-kde{,-ubuntu}
           libcompizconfig{,-ubuntu}
           compizconfig-backend-gconf{,-ubuntu}
           compizconfig-backend-kconfig4{,-ubuntu}
           compizconfig-python{,-ubuntu}
           ccsm{,-ubuntu}
           compiz-plugins-main{,-ubuntu}
           compiz-plugins-extra{,-ubuntu})
groups=('unity')
options=('emptydirs')
install=compiz-ubuntu.install
source=("https://launchpad.net/ubuntu/+archive/primary/+files/${pkgname%-*}_${_actual_ver}+bzr${_bzr_rev}.orig.tar.gz"
        "https://launchpad.net/ubuntu/+archive/primary/+files/${pkgname%-*}_${_actual_ver}+bzr${_bzr_rev}-${_ubuntu_rel}.diff.gz"
        'compiz.reset'
        '0002_Fix_cmake_install_dir.patch'
        '0003_Fix_python_install_command.patch'
        '0004_Use_python2.patch'
        'compiz-migrate-to-dconf.desktop')
sha512sums=('617893f776fe98f672617e77e427eb9ab512bc2a708a0868c57d20ddce6f7e9009f940c1e1d641ace04dd8ab1c146838d6cbcadafaaace3ae2f9aaea463b719e'
            'cd346bf90a7b1652f15ddc173c63a2d53a1a250c19c6e12f58ec4a8d0880ee07379205a036dcd261db78d01a1ec01f3a2a9e6d14b51433054ee7a1b3a4a96bb1'
            'cf0324a656e855ff26b624386d287ae4d90ede8f14d8eb7e613591de1dd90c7eb00ebfbb401802caa6e6e9aac99031e9ddd8a966ed23513b9e33b529f3b9519c'
            '0915398c67aa1f8fa8d89e5f2efa5fe9cf1d5cfa862042b5d920aff5454bc220def92b691ae8010e8d4254adcd6199865b81584ce56b1ac0e81d00272c33e688'
            '8af143fd47d6e949a2096a9f53cd25417c8f0fce8a5225084cf28deacef177383dc9ddac7b81330346f936ed05686644cacb73852fc66c39e1796a1f2a7a6937'
            'd898b253f32ef8fbc4e83b0495572d96eb292eaf948ee4aa413524cbd50d77bbd7a82104d7f2312c21c3ce35cca640ffc3be6f8070c306b0582d1a22a8010057'
            'affbff2a8ce7d5f223ce86407ef0e80769f9df47228b7acdf25d0ac82b70b80a9b0bce4507df928b9738ef69d1dc8ab3a3622094b2e765f89d54db2b10899cc8')

build() {
  cd "${srcdir}/${pkgname%-*}-${_actual_ver}"

  # Fix the directory for FindCompiz.cmake and FindCompizConfig.cmake
  patch -Np1 -i "${srcdir}/0002_Fix_cmake_install_dir.patch"

  # Compiz's build system appends --install-layout=deb to the python 2 install
  # command (for python-compizconfig and ccsm) whether or not COMPIZ_DEB_BUILD
  # is set to 1
  patch -Np1 -i "${srcdir}/0003_Fix_python_install_command.patch"

  # Use python 2
  patch -Np1 -i "${srcdir}/0004_Use_python2.patch"

  # Apply Ubuntu patches
  zcat "${srcdir}/${pkgname%-*}_${_actual_ver}+bzr${_bzr_rev}-${_ubuntu_rel}.diff.gz" | patch -Np1

  for i in $(cat debian/patches/series | grep -v '#'); do
    patch -Np1 -i "debian/patches/${i}"
  done

  # Disable '-Bsymbolic-functions' if present so libcompiz_core won't be
  # loaded once per plugin
  LDFLAGS="$(echo ${LDFLAGS} | sed 's/-B[ ]*symbolic-functions//')"

  # Disable rpath in Python 2 bindings
  export COMPIZ_DISABLE_RPATH=1

  # Compiz will segfault if the CMake built target is set to 'Release'
  # Disable tests since they can't run on a headless build server

  [[ -d build ]] && rm -rvf build/
  mkdir build/
  cd build/
  cmake .. \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCOMPIZ_BUILD_WITH_RPATH=FALSE \
    -DCOMPIZ_DEFAULT_PLUGINS="ccp" \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DCOMPIZ_PACKAGING_ENABLED=TRUE \
    -DUSE_GSETTINGS=ON \
    -DCOMPIZ_DISABLE_GS_SCHEMAS_INSTALL=OFF \
    -DCOMPIZ_BUILD_TESTING=OFF \
    -DCOMPIZ_DISABLE_PLUGIN_KDE=ON \
    -DUSE_KDE4=OFF

  make ${MAKEFLAGS}
}

package() {
  cd "${srcdir}/${pkgname%-*}-${_actual_ver}/build"
  GCONF_DISABLE_MAKEFILE_SCHEMA_INSTALL=1 make install DESTDIR="${pkgdir}"

  # Stupid findcompiz_install needs COMPIZ_DESTDIR and install needs DESTDIR
  #make findcompiz_install
  CMAKE_DIR=$(cmake --system-information | grep '^CMAKE_ROOT' \
    | awk -F\" '{print $2}')
  install -dm755 "${pkgdir}${CMAKE_DIR}/Modules/"
  install -m644 ../cmake/FindCompiz.cmake \
    "${pkgdir}${CMAKE_DIR}/Modules/"

  # Install documentation
  install -dm755 "${pkgdir}/usr/share/doc/compiz/"
  install ../{AUTHORS,NEWS,README} \
    "${pkgdir}/usr/share/doc/compiz/"

  # Install Ubuntu's files
  install -dm755 "${pkgdir}/usr/share/man/man1/"
  install -dm755 "${pkgdir}/etc/X11/xinit/xinitrc.d/"
  install -dm755 "${pkgdir}/etc/compizconfig/upgrades/"
  install -dm755 "${pkgdir}/usr/share/gnome/wm-properties/"
  install -dm755 "${pkgdir}/usr/share/gconf/defaults/"

  # Install manual pages
  install -m644 ../debian/{ccsm,compiz,gtk-window-decorator}.1 \
    "${pkgdir}/usr/share/man/man1/"

  # Window manager desktop file for GNOME
  install -m644 \
    "${pkgdir}/usr/share/applications/compiz.desktop" \
    "${pkgdir}/usr/share/gnome/wm-properties/"

  # Install X11 startup script
  install -m755 ../debian/65compiz_profile-on-session \
    "${pkgdir}/etc/X11/xinit/xinitrc.d/"

  # Unity Compiz profile configuration file
  install -m644 ../debian/unity.ini "${pkgdir}/etc/compizconfig/"

  # Install Compiz profile configuration file
  install -m644 ../debian/config "${pkgdir}/etc/compizconfig/"

  # Compiz profile upgrade helper files for ensuring smooth upgrades from older
  # configuration files
  pushd ../debian/profile_upgrades/
  find . -type f -name '*.upgrade' -exec \
    install -m644 {} "${pkgdir}"/etc/compizconfig/upgrades/{} \;
  popd

  install -dm755 "${pkgdir}/usr/lib/compiz/migration/"
  pushd ../postinst/convert-files/
  find . -type f -name '*.convert' -exec \
    install -m644 {} "${pkgdir}"/usr/lib/compiz/migration/{} \;
  popd

  # Install keybinding files
  install -dm755 "${pkgdir}/usr/share/gnome-control-center/keybindings/"
  find ../*/gtk/gnome/ -name *.xml -exec install {} \
    "${pkgdir}/usr/share/gnome-control-center/keybindings/" \;

  # Default GConf settings
  install -m644 ../debian/compiz-gnome.gconf-defaults \
    "${pkgdir}/usr/share/gconf/defaults/10_compiz-gnome"

  # Default GSettings settings
  install -m644 ../debian/compiz-gnome.gsettings-override \
    "${pkgdir}/usr/share/glib-2.0/schemas/10_compiz-ubuntu.gschema.override"

  # Install script for resetting all of Compiz's settings
  install "${srcdir}/compiz.reset" "${pkgdir}/usr/bin/compiz.reset"

  # Install script for migrating GConf settings to GSettings
  install -dm755 "${pkgdir}/etc/xdg/autostart/"
  install -m644 ../postinst/migration-scripts/02_migrate_to_gsettings.py \
    "${pkgdir}/usr/lib/compiz/"
  install -m644 "${srcdir}/compiz-migrate-to-dconf.desktop" \
    "${pkgdir}/etc/xdg/autostart/"
}

# vim:set ts=2 sw=2 et:
