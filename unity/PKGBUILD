# Maintainer: Xiao-Long Chen <chenxiaolong@cxl.epac.to>

pkgname=unity
_actual_ver=7.2.0
_extra_ver=+14.04.20140403
_ubuntu_rel=0ubuntu1
pkgver=${_actual_ver}${_extra_ver/+/.}
pkgrel=2

pkgdesc="A desktop experience designed for efficiency of space and interaction"
arch=('i686' 'x86_64')
url="https://launchpad.net/unity"
license=('GPL')
depends=('bamf' 'boost' 'compiz-ubuntu>=0.9.11' 'clutter-gtk' 'gjs' 'gnome-desktop' 'gnome-screensaver' 'gnome-session-ubuntu' 'hud' 'ido' 'libgnomeui' 'libindicator' 'libindicator3' 'libnotify' 'libunique' 'libunity' 'libunity-misc' 'libxfixes' 'nux>=4.0.6' 'unity-asset-pool' 'unity-scope-home' 'libxi' 'xpathselect' 'zeitgeist-ubuntu' 'lightdm-unity-greeter')
makedepends=('cmake' 'doxygen' 'intltool' 'patchutils' 'pkg-config' 'python2-distribute')
groups=('unity')
provides=("unity-core=${_actual_ver}")
conflicts=('unity-core')

install=unity.install
source=("https://launchpad.net/ubuntu/+archive/primary/+files/unity_${_actual_ver}${_extra_ver}.orig.tar.gz"
        "https://launchpad.net/ubuntu/+archive/primary/+files/unity_${_actual_ver}${_extra_ver}-${_ubuntu_rel}.diff.gz"
        '0001_Remove_gtest.patch'
        '0002_ArchLinux_Branding.patch'
        '0003_Revert_r3134_Remove_Systray_Whitelist.patch'
        '0005_Disable_Werror.patch'
        '0008_Remove_Launchers.patch'
        '0010_The_future_is_systemd.patch'
        '0011_Remove_social_scope.patch'
        'com.ubuntu.user-interface.gschema.xml'
        'launcher_bfb.png'
        'unity-migrate-dconf-path.desktop'
        '10_unity.gschema.override'
        'com.canonical.Unity.Panel.Service.service'
        '99unity-panel-service'
        'unity-debug')
sha512sums=('b213716e7fcf0fe22bdc4bae402e0ce403612b777f6a0c379ac7c789ab695547818d18f8906dfb61ddb4b62c11909bcc69496d953904cc6f0ff583790a9f6842'
            'be7b0080c55b159f009262c8135aa68a1c6a20fba02eabe70724d6793dd00192561a25c176f3a515d72cf95ed4f3e40118942adce54c0d3059af541a8d2953bb'
            '3be3303e6b6f023ca246b23c0293ce3987a070f74bf92d9ab07d2255f2254743078f4111007ef414a37b7368d86e80ae1350f2a956300a6ac5495f41bfd7878e'
            'c3421eb14e6f6c94e53d5f14341c7f9e6a770a71f02b9dded97fe5d0ded9efa1e7c0fc1df90b0709d1bec5126df8be7469612689344eea616868e6541bec42fb'
            'ed40106d1056fb341a2f3c309842a34b9544c1ce9b824bd915f7c4ef44355f25366405387c6bcaf07c1dc35668eeae6281a0b9880f8ee7c6aeaac424d9b04a85'
            'f9bef454bce75006d4d1535647c6d606a1a8df1e59578b6bb248e4d331d97ce67e03f3266f112c1d9877061ebab5065f36e3b0bb5702266931302caa12343398'
            'afd4b3d93c8a762b3245340cee4f10a7f3a6e33aee6eb766dee9c4c76a4a0047b0a9eee1663fd48d73e4bcc0f6855f62e460fa36f07739876f02f57ee3f4d4f6'
            'ba36657f714a5fae7fa7e3012438bc951f7812093078245f1e5180daf1618502bbc46a63604032a165ad421c8e450f297155a986c2fe29895b96bdf3cb33114a'
            'd910b32832602e6f9b6a3f2c2476b96593df0b745077468436a3c995a21c88c684cc9a190d93cee6051a8194dd637f35a387691bdb979a380b431ac6b00c4351'
            '126ed309012d60ef51da95b115d877f65c8f8dee415be781ad9f6c0efedc5639227f72218d9c790f5d00937378ba62691d0d29fd9ac757d75dd156fd4f4b7eba'
            'ec9ea91d79129b23aae6c4b9584fb396ecc572a0bafcac6229cc413ee441f610cb51ffce9383544c9fc62e747d5718be9be050850943eac4820095f190dc0ed0'
            '8eb535adc7aefd95c0ccfdd35525b4be764c4377ae5fc6002ad6ef6fd84b733c9054f8228083ce50eac1f970fdc1ef987ad1eb47813e7621b481ec3f490a9df7'
            '872c48f85350d2d815418afab340946f85ec1f9f3e1ab748fc1199df342df52642447736a5b783fb17eb324a961bbf8badc4e8401512e7182e4ff2e25b53d3a1'
            '76931a0d26c6a12e21dd0201f5ed8726ff0222f62cbcf4715d782b5b216d288fd4a7834188053a8df56a4c73af2db0b0b64fc2c0298ac0d383e8e42a0c6b85de'
            '5bd357e03392c6abf76b51df78e59eafb1f04e997465fe1b73c02a8e265306b020bbdb05e66d959fb44a3df1aaf24559d70289aedf6803c917ca689ec848bf66'
            'b217490bf5eb5b0e83dbc9737b80b2ab9d7288362f370625f3c99d5a862c0e1947376b9fab4fdc9c2ddd4e8bd6e8d2ff5763a3a4391732f0781abbc60b159db5')

prepare() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}"

  # Arch Linux branding: "Ubuntu Desktop" -> "Arch Linux Desktop"
  # (thanks to qiuwei!)
  patch -p1 -i "${srcdir}/0002_ArchLinux_Branding.patch"

  # Upstream support for the systray whitelist was removed
  patch -p1 -i "${srcdir}/0003_Revert_r3134_Remove_Systray_Whitelist.patch"

  # Do not treat warnings as errors
  patch -p1 -i "${srcdir}/0005_Disable_Werror.patch"

  # Remove launchers for Ubuntu's stupid Amazon crap, Ubuntu One (can be
  # manually re-added), Ubuntu's Software Center (not packaged in Arch Linux),
  # and Ubuntu's Ubiquity LiveCD installer
  patch -p1 -i "${srcdir}/0008_Remove_Launchers.patch"

  patch -p1 -i "${srcdir}/0010_The_future_is_systemd.patch"

  patch -p1 -i "${srcdir}/0011_Remove_social_scope.patch"

  # Apply Ubuntu patches
  patch -p1 -i "${srcdir}/unity_${_actual_ver}${_extra_ver}-${_ubuntu_rel}.diff"
  for i in $(grep -v '#' debian/patches/series); do
    patch -p1 -i "debian/patches/${i}"
  done

  # Disable gtest
  patch -p1 -i "${srcdir}/0001_Remove_gtest.patch"

  # Ubuntu Desktop -> Arch Linux Desktop
  sed -i '/msgid "Ubuntu Desktop"/ {n;s/Ubuntu/Arch Linux/}' po/*.po
  sed -i 's/Ubuntu Desktop/Arch Linux Desktop/g' po/*.po
}

build() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}"

  # (From debian/rules) http://ccache.samba.org/manual.html#_precompiled_headers
  export CCACHE_SLOPPINESS=time_macros

  [[ -d build ]] && rm -rvf build/
  mkdir build/ && cd build/

  PATH="${srcdir}/cmake/bin:${PATH}" \
  cmake -Wno-dev \
    -DCOMPIZ_BUILD_WITH_RPATH=FALSE \
    -DCOMPIZ_PACKAGING_ENABLED=TRUE \
    -DCOMPIZ_PLUGIN_INSTALL_TYPE=package \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DUSE_GSETTINGS=TRUE \
    -Duse_pch=OFF \
    ..

  make

  # Make sure that the GSettings schema files were created
  pushd generated/glib-2.0/schemas/
  if \
    [ ! -f org.compiz.networkarearegion.gschema.xml ] || \
    [ ! -f org.compiz.unitydialog.gschema.xml ] || \
    [ ! -f org.compiz.unitymtgrabhandles.gschema.xml ] ||
    [ ! -f org.compiz.unityshell.gschema.xml ]; then
    make compiz_gsettings_compile_local
  fi
  popd
}

package() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}/build"
  make DESTDIR="${pkgdir}/" install

  # Install dconf path migration stuff
  install -dm755 "${pkgdir}/etc/xdg/autostart/"
  install -m644 "${srcdir}/unity-migrate-dconf-path.desktop" \
    "${pkgdir}/etc/xdg/autostart/"
  install -m755 ../tools/migration-scripts/01_unity_change_dconf_path \
    "${pkgdir}/usr/lib/unity/"

  # Install profile convert files
  install -dm755 "${pkgdir}/usr/lib/compiz/migration/"
  install -m644 ../tools/convert-files/* "${pkgdir}/usr/lib/compiz/migration/"

  # Taken from Ubuntu source package's debian/rules file
  find "${pkgdir}/usr/lib" -name \*.*a -exec rm {} \;
  rm -vf "${pkgdir}/usr/share/compiz/networkarearegion.xml"
  rm -vf "${pkgdir}/usr/lib/compiz/libnetworkarearegion.so"
  rm -vf "${pkgdir}/usr/share/compiz/unitydialog.xml"
  rm -vf "${pkgdir}/usr/lib/compiz/libunitydialog.so"

  # Fix Python 2 scripts
  sed -i 's|^\(#!.*python$\)|\12|g' \
    "${pkgdir}/usr/bin/unity" \
    "${pkgdir}/usr/lib/unity/makebootchart.py"

  # Arch Linux logo
  install -m644 "${srcdir}/launcher_bfb.png" \
    "${pkgdir}/usr/share/unity/icons/launcher_bfb.png"

  # Check for missing GSettings schemas
  pushd "${pkgdir}/usr/share/glib-2.0/schemas/"
  if \
    [ ! -f org.compiz.networkarearegion.gschema.xml ] || \
    [ ! -f org.compiz.unitydialog.gschema.xml ] || \
    [ ! -f org.compiz.unitymtgrabhandles.gschema.xml ] || \
    [ ! -f org.compiz.unityshell.gschema.xml ]; then
    error "GSettings schemas didn't get installed"'!'
    error "Please tar and upload the src/ directory and report a bug."
    exit 1
  fi
  popd

  # Change window dragging key back to Alt. Super conflicts with Unity's other
  # hotkeys.
  install -m644 "${srcdir}/10_unity.gschema.override" \
    "${pkgdir}/usr/share/glib-2.0/schemas/"

  install -m644 "${srcdir}/com.ubuntu.user-interface.gschema.xml" \
    "${pkgdir}/usr/share/glib-2.0/schemas/"

  # unity-panel-service is now started by an Upstart user job. I'm not quite
  # sure how to use systemd's user services to do the same thing yet.
  install -dm755 "${pkgdir}/usr/share/dbus-1/services/"
  install -m644 "${srcdir}/com.canonical.Unity.Panel.Service.service" \
    "${pkgdir}/usr/share/dbus-1/services/"

  # Fix launching of unity-panel-service (from unity-gentoo project)
  install -dm755 "${pkgdir}/etc/X11/xinit/xinitrc.d/"
  install -m755 "${srcdir}/99unity-panel-service" \
                "${pkgdir}/etc/X11/xinit/xinitrc.d/"

  # Install script for running Unity with debug output (from unity-gentoo project)
  install -m755 "${srcdir}/unity-debug" "${pkgdir}/usr/bin/"

  # Use language packs
  rm -r "${pkgdir}/usr/share/locale/"
}

# vim:set ts=2 sw=2 et:
