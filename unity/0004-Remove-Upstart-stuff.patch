From 667ef76e223ff28a5324dd3c470702e976989f81 Mon Sep 17 00:00:00 2001
From: Xiao-Long Chen <chenxiaolong@cxl.epac.to>
Date: Thu, 10 Apr 2014 20:17:13 -0400
Subject: [PATCH 4/7] Remove Upstart stuff

---
 services/CMakeLists.txt         |  7 -------
 services/panel-service.c        | 39 +--------------------------------------
 unity-shared/UpstartWrapper.cpp |  9 ++-------
 3 files changed, 3 insertions(+), 52 deletions(-)

diff --git a/services/CMakeLists.txt b/services/CMakeLists.txt
index b48d95a..ae0bdc6 100644
--- a/services/CMakeLists.txt
+++ b/services/CMakeLists.txt
@@ -12,7 +12,6 @@ set(UNITY_PANEL_SERVICE_DEPS
     indicator3-0.4>=12.10.2
     x11
     libido3-0.1>=13.0.0
-    libupstart
 )
 
 pkg_check_modules(SERVICE_DEPS REQUIRED ${UNITY_PANEL_SERVICE_DEPS})
@@ -52,9 +51,3 @@ link_directories(${LIB_PATHS})
 add_executable(unity-panel-service ${PANEL_SOURCES})
 target_link_libraries(unity-panel-service ${LIBS})
 install(TARGETS unity-panel-service DESTINATION ${CMAKE_INSTALL_LIBDIR}/unity/)
-
-configure_file(unity-panel-service.conf.in ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service.conf)
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service.conf DESTINATION ${CMAKE_INSTALL_DATADIR}/upstart/sessions)
-
-configure_file(unity-panel-service-lockscreen.conf.in ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service-lockscreen.conf)
-install(FILES ${CMAKE_CURRENT_BINARY_DIR}/unity-panel-service-lockscreen.conf DESTINATION ${CMAKE_INSTALL_DATADIR}/upstart/sessions)
diff --git a/services/panel-service.c b/services/panel-service.c
index b9b86cd..170c779 100644
--- a/services/panel-service.c
+++ b/services/panel-service.c
@@ -34,8 +34,6 @@
 #include <X11/XF86keysym.h>
 #include <X11/extensions/XInput2.h>
 
-#include <upstart/upstart-dbus.h>
-
 G_DEFINE_TYPE (PanelService, panel_service, G_TYPE_OBJECT);
 
 #define GET_PRIVATE(o) \
@@ -804,42 +802,7 @@ parse_string_keybinding (const char *str, KeyBinding *kb)
 static void
 emit_upstart_event (const gchar *event)
 {
-  const gchar *upstartsession = g_getenv ("UPSTART_SESSION");
-
-  if (!upstartsession)
-    return;
-
-  GError *error = NULL;
-  GDBusConnection* conn = g_dbus_connection_new_for_address_sync (upstartsession,
-                                                                  G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT,
-                                                                  NULL, NULL, &error);
-
-  if (error)
-    {
-      g_warning ("Unable to connect to Upstart session: %s", error->message);
-      g_error_free (error);
-      return;
-    }
-
-  GVariant *result = g_dbus_connection_call_sync (conn, DBUS_SERVICE_UPSTART,
-                                                  DBUS_PATH_UPSTART,
-                                                  DBUS_INTERFACE_UPSTART,
-                                                  "EmitEvent",
-                                                  g_variant_new ("(sasb)", event, NULL, 0),
-                                                  NULL, G_DBUS_CALL_FLAGS_NO_AUTO_START, -1,
-                                                  NULL, &error);
-
-  if (error)
-    {
-      g_warning ("Unable to emit Upstart event: %s", error->message);
-      g_error_free (error);
-    }
-  else
-    {
-      g_variant_unref (result);
-    }
-
-  g_object_unref (conn);
+  (void) event;
 }
 
 
diff --git a/unity-shared/UpstartWrapper.cpp b/unity-shared/UpstartWrapper.cpp
index ea2cd46..7ff2089 100644
--- a/unity-shared/UpstartWrapper.cpp
+++ b/unity-shared/UpstartWrapper.cpp
@@ -20,7 +20,6 @@
 #include "UpstartWrapper.h"
 
 #include <UnityCore/GLibDBusProxy.h>
-#include <upstart/upstart-dbus.h>
 
 namespace unity
 {
@@ -35,20 +34,16 @@ public:
   Impl(bool test_mode = (!g_getenv("UPSTART_SESSION")));
 
   void Emit(std::string const& name);
-
-private:
-  glib::DBusProxy::Ptr upstart_proxy_;
 };
 
 UpstartWrapper::Impl::Impl(bool test_mode)
 {
-  upstart_proxy_ = std::make_shared<unity::glib::DBusProxy>(test_mode ?  "com.canonical.Unity.Test.Upstart" : DBUS_SERVICE_UPSTART,
-                                                            DBUS_PATH_UPSTART, DBUS_INTERFACE_UPSTART);
+  (void) test_mode;
 }
 
 void UpstartWrapper::Impl::Emit(std::string const& name)
 {
-  upstart_proxy_->Call("EmitEvent", g_variant_new("(sasb)", name.c_str(), nullptr, 0));
+  (void) name;
 }
 
 //
-- 
2.8.2

